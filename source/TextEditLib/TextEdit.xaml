<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
	xmlns:editing="clr-namespace:ICSharpCode.AvalonEdit.Editing;assembly=ICSharpCode.AvalonEdit"
	xmlns:local="clr-namespace:TextEditLib"
	xmlns:rendering="clr-namespace:ICSharpCode.AvalonEdit.Rendering;assembly=ICSharpCode.AvalonEdit"
	xmlns:reskeys="clr-namespace:TextEditLib.Themes">

	<Style TargetType="{x:Type local:TextEdit}">
		<!--  AvalonEdit does not support RTL, so ensure we use LTR by default  -->
		<Setter Property="FlowDirection" Value="LeftToRight" />
		<Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.EditorBackground}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.EditorForeground}}" />
		<Setter Property="LineNumbersForeground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.EditorLineNumbersForeground}}" />
		<Setter Property="EditorCurrentLineBackground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.EditorCurrentLineBackgroundBrushKey}}" />
		<Setter Property="EditorCurrentLineBorder" Value="{DynamicResource {x:Static reskeys:ResourceKeys.EditorCurrentLineBorderBrushKey}}" />
		<Setter Property="EditorCurrentLineBorderThickness" Value="{DynamicResource {x:Static reskeys:ResourceKeys.EditorCurrentLineBorderThicknessKey}}" />
		<Setter Property="ContextMenu">
			<Setter.Value>
				<ContextMenu>
					<MenuItem Command="Cut" Header="Cut">
						<MenuItem.Icon>
							<Image
								Height="16"
								SnapsToDevicePixels="True"
								Source="{DynamicResource Image_Cut}" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Command="Copy" Header="Copy">
						<MenuItem.Icon>
							<Image
								Height="16"
								SnapsToDevicePixels="True"
								Source="{DynamicResource Image_Copy}" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Command="Paste" Header="Paste">
						<MenuItem.Icon>
							<Image
								Height="16"
								SnapsToDevicePixels="True"
								Source="{DynamicResource Image_Paste}" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Command="Delete" Header="Delete">
						<MenuItem.Icon>
							<Image
								Height="16"
								SnapsToDevicePixels="True"
								Source="{DynamicResource Image_Delete}" />
						</MenuItem.Icon>
					</MenuItem>

					<Separator />

					<MenuItem Command="Undo" Header="Undo">
						<MenuItem.Icon>
							<Image
								Height="16"
								SnapsToDevicePixels="True"
								Source="{DynamicResource Image_Undo}" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Command="Redo" Header="Redo">
						<MenuItem.Icon>
							<Image
								Height="16"
								SnapsToDevicePixels="True"
								Source="{DynamicResource Image_Redo}" />
						</MenuItem.Icon>
					</MenuItem>
				</ContextMenu>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:TextEdit}">
					<ControlTemplate.Resources>
						<Style TargetType="{x:Type rendering:TextView}">
							<Setter Property="NonPrintableCharacterBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.EditorNonPrintableCharacterBrush}}" />
							<Setter Property="LinkTextForegroundBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.EditorLinkTextForegroundBrush}}" />
							<!--  Style hyperlink displayed within text in text editor  -->
							<Setter Property="LinkTextBackgroundBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.EditorLinkTextBackgroundBrush}}" />
						</Style>

						<Style TargetType="{x:Type editing:TextArea}">
							<Setter Property="FocusVisualStyle" Value="{x:Null}" />
							<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.EditorSelectionBrush}}" />
							<Setter Property="SelectionBorder">
								<Setter.Value>
									<Pen Brush="{DynamicResource {x:Static reskeys:ResourceKeys.EditorSelectionBorder}}" Thickness="1" />
								</Setter.Value>
							</Setter>
							<Setter Property="SelectionCornerRadius" Value="0" />
							<Setter Property="SelectionForeground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type editing:TextArea}">
										<DockPanel Focusable="False">
											<ItemsControl
												DockPanel.Dock="Left"
												Focusable="False"
												ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LeftMargins}">
												<ItemsControl.ItemsPanel>
													<ItemsPanelTemplate>
														<StackPanel Orientation="Horizontal" />
													</ItemsPanelTemplate>
												</ItemsControl.ItemsPanel>
											</ItemsControl>
											<ContentPresenter
												Panel.ZIndex="-1"
												Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextView}"
												Focusable="False" />
										</DockPanel>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ControlTemplate.Resources>
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<ScrollViewer
							Name="PART_ScrollViewer"
							Padding="{TemplateBinding Padding}"
							HorizontalContentAlignment="Left"
							VerticalContentAlignment="Top"
							CanContentScroll="True"
							Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextArea}"
							Focusable="False"
							HorizontalScrollBarVisibility="Auto"
							VerticalScrollBarVisibility="Auto" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="WordWrap" Value="True">
							<Setter TargetName="PART_ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>